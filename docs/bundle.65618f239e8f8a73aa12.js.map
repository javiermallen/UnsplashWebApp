{"version":3,"sources":["webpack://api-unsplash/./src/js/http-provider.js","webpack://api-unsplash/./src/js/imagenes-page.js","webpack://api-unsplash/./src/index.js","webpack://api-unsplash/./src/js/daynight-control.js"],"names":["document","getElementById","mensajeResultados","crearVectorImagenes","async","resultados","innerHTML","palabraBuscar","value","resp","fetch","valorQuery","APIkey","ok","results","json","length","classList","remove","add","error","console","log","cargarImagenesAPI","imagenesNodo","forEach","resultado","key","createElement","style","backgroundImage","urls","small","addEventListener","window","open","links","download","imagenes","appendChild","lupa","hora","Date","getHours","body","backgroundColor","color","input","evento"],"mappings":"mBACA,MAIM,EAAoBA,SAASC,eAAgB,SAC7C,EAAoBD,SAASC,eAAgB,YAC7CC,EAAoBF,SAASC,eAAgB,iBCHtCE,EAAsBC,UAC/B,MAAMC,ODKuBD,WAE7B,EAASE,UAAY,GACrB,IACI,MAAMC,EAAgB,EAAMC,MACtBC,QAAaC,OAbLC,EAayBJ,EAbbK,EADR,8CACoB,gDAAiDD,2BAAsCC,MAc7H,IAAKH,EAAKI,GACN,KAAM,uDAEV,MAAQC,QAAST,SAAqBI,EAAKM,OAS3C,OAP0B,IAAtBV,EAAWW,OACVd,EAAkBe,UAAUC,OAAQ,UAErChB,EAAkBe,UAAUE,IAAK,UAGrC,EAAMX,MAAQ,GACPH,EACT,MAAQe,GACNC,QAAQC,IAAKF,GA5BD,IAAET,EAAYC,GCGLW,GAGnBC,EAAe,GACrBnB,EAAWoB,SAAS,CAAEC,EAAWC,KAC7BH,EAAcG,GAAQ3B,SAAS4B,cAAe,OAC9CJ,EAAcG,GAAMV,UAAUE,IAAK,OACnCK,EAAcG,GAAME,MAAMC,gBAAkB,QAASJ,EAAUK,KAAKC,UACpER,EAAcG,GAAMM,iBAAkB,YAAY,KAG9CC,OAAOC,KAAMT,EAAUU,MAAMC,SAAU,aAE3CC,SAASC,YAAaf,EAAcG,QCVtCa,EAAOxC,SAASC,eAAgB,QAKtCiC,OAAOD,iBAAkB,QCXG,KAExB,MAEMQ,GAFQ,IAAIC,MAEEC,WAEhBF,EAAO,GAAKA,EAAO,IAEnBzC,SAAS4C,KAAKf,MAAMgB,gBAAkB,OACtC7C,SAAS4C,KAAKf,MAAMiB,MAAkB,YAEtC9C,SAAS4C,KAAKf,MAAMgB,gBAAkB,UACtC7C,SAAS4C,KAAKf,MAAMiB,MAAkB,WDE9CC,MAAMd,iBAAkB,SAAYe,IACb,UAAfA,EAAOrB,KACPxB,OAIRqC,EAAKP,iBAAkB,SAAS,KAC5B9B,Q","file":"bundle.65618f239e8f8a73aa12.js","sourcesContent":["//Dirección y APIKEY de unsplash\r\nconst accessKeyUnsplash = 'c_Xw0L2bBiZsQ4clEbqPue-JQPcBy-jSxRM6VPfsSZo';\r\nconst APIUnsplash = ( valorQuery, APIkey ) => `https://api.unsplash.com/search/photos?query=${ valorQuery }&per_page=30&client_id=${ APIkey }`;\r\n\r\n//Elementos que tengo que coger del DOM\r\nconst input             = document.getElementById( 'input' );\r\nconst imagenes          = document.getElementById( 'imagenes' );\r\nconst mensajeResultados = document.getElementById( 'no-resultados' );\r\n\r\n//Función encargada de realizar la conexión a la API\r\nexport const cargarImagenesAPI = async() => {\r\n    //Borramos los elementos que tenemos de la busqueda Anterior\r\n    imagenes.innerHTML = '';\r\n    try {\r\n        const palabraBuscar = input.value;\r\n        const resp = await fetch( APIUnsplash( palabraBuscar, accessKeyUnsplash ) );  \r\n        if( !resp.ok ){\r\n            throw 'No se ha podido realizar la conexión con el servidor'\r\n        }\r\n        const { results: resultados } = await resp.json();\r\n        //Si no hay resultados muestro un promp\r\n        if( resultados.length === 0 ) {\r\n             mensajeResultados.classList.remove( 'hidden' )\r\n        } else {\r\n            mensajeResultados.classList.add( 'hidden' );\r\n        }\r\n        //Borro lo que hay en el input\r\n        input.value = '';\r\n        return resultados;\r\n    } catch ( error ) {\r\n        console.log( error );\r\n    }\r\n}","//Importamos el proveedor de imágenes\r\nimport { cargarImagenesAPI } from './http-provider';\r\n\r\n//Tengo que llamar a la función que dibuja el HTML\r\nexport const crearVectorImagenes = async() => {\r\n    const resultados = await cargarImagenesAPI();\r\n    //Recibimos la información en un vector y de allí queremos extraer la dirección de las imágenes, está dirección será la que que utilizaremos\r\n    //para establecer el valor en el CSS\r\n    const imagenesNodo = [];\r\n    resultados.forEach( ( resultado, key ) => {\r\n        imagenesNodo[ key ] = document.createElement( 'div' );\r\n        imagenesNodo[ key ].classList.add( 'img' );\r\n        imagenesNodo[ key ].style.backgroundImage = `url( ${ resultado.urls.small } )`;\r\n        imagenesNodo[ key ].addEventListener( 'dblclick', () => {\r\n            //Buscamos que al hacer doble clic sobre cada una de las imágenes, se abra la imagen en su tamaño original para poder descargarla\r\n            //El objeto json que recibimos tienes una propiedad links y dentro otra download que realiza esa acción\r\n            window.open( resultado.links.download, '_blank' )\r\n        })\r\n        imagenes.appendChild( imagenesNodo[ key ] );\r\n    });\r\n}","//Importamos el css desde la carpeta donde se encuentra\r\nimport './css/style.css';\r\n\r\n//Importamos las funciones que se necesitan para que funcione la aplicación\r\nimport { crearVectorImagenes } from './js/imagenes-page';\r\nimport { diaNocheModo } from './js/daynight-control';\r\n\r\n//Elementos del DOM\r\nconst lupa = document.getElementById( 'lupa' );\r\n\r\n\r\n//--------------------- EVENTOS ---------------------\r\n//Evento que controla cuando la página se acaba de cargar, este evento llamar a la función que controla el color de la página\r\nwindow.addEventListener( 'load', diaNocheModo );\r\n\r\n//Evento que al pulsar enter en el input inicia la petición a la API\r\ninput.addEventListener( 'keyup' , ( evento ) => {\r\n    if( evento.key === 'Enter') {\r\n        crearVectorImagenes();        \r\n    } \r\n})\r\n//Evento que al pulsar la lupa en el input inicia la petición a la API\r\nlupa.addEventListener( 'click', () => {\r\n    crearVectorImagenes();\r\n})\r\n","\r\n\r\nexport const diaNocheModo = () => {\r\n    //Primero, llamamos al objeto date\r\n    const fecha = new Date();\r\n    //Segundo, extraemos la hora de la fecha\r\n    const hora  = fecha.getHours();\r\n    //Tercero, hacemos las condiciones, el método getHours, devuelve la hora en formato 0 a 23\r\n    if( hora > 7 && hora < 20 ){\r\n        //Accedemos al body desde el documento y cambiamos background-color y el color\r\n        document.body.style.backgroundColor = '#fff';\r\n        document.body.style.color           = '#121212'\r\n    } else {\r\n        document.body.style.backgroundColor = '#121212';\r\n        document.body.style.color           = '#fff';\r\n    }\r\n}"],"sourceRoot":""}